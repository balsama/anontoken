<?php
/**
 * @file
 *   Provides API functions to set and validate tokens for anon and
 *   authenticated users alike.
 */

/**
 * Generates a token based on $value, the User's Universally Unique ID, and the
 * private key.
 *
 * @param $value
 *   An additional value to base the token on.
 *
 * @return string
 *   A 43-character URL-safe token for validation, based on the user UUID,
 *   the hash salt provided from drupal_get_hash_salt(), and the
 *   'drupal_private_key' configuration variable.
 *
 * @see drupal_get_hash_salt()
 * @see uuuid()
 */
function anontoken_get($value = '') {
  $token = drupal_hmac_base64($value, uuuid() . drupal_get_private_key() . drupal_get_hash_salt());
  return $token;
}

/**
 * Validates a token based on $value, the user UUID, and the private key.
 *
 * @param $token
 *   The token to be validated.
 * @param $value
 *   An additional value to base the token on.
 *
 * @return
 *   True for a valid token, false for an invalid token.
 */
function anontoken_valid($token, $value = '') {
  if ($token === anontoken_get($value)) {
    return TRUE;
  }
  return FALSE;
}

